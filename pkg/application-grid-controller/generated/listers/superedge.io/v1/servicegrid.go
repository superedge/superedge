/*
Copyright 2020 The SuperEdge Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/superedge/superedge/pkg/application-grid-controller/apis/superedge.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceGridLister helps list ServiceGrids.
// All objects returned here must be treated as read-only.
type ServiceGridLister interface {
	// List lists all ServiceGrids in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ServiceGrid, err error)
	// ServiceGrids returns an object that can list and get ServiceGrids.
	ServiceGrids(namespace string) ServiceGridNamespaceLister
	ServiceGridListerExpansion
}

// serviceGridLister implements the ServiceGridLister interface.
type serviceGridLister struct {
	indexer cache.Indexer
}

// NewServiceGridLister returns a new ServiceGridLister.
func NewServiceGridLister(indexer cache.Indexer) ServiceGridLister {
	return &serviceGridLister{indexer: indexer}
}

// List lists all ServiceGrids in the indexer.
func (s *serviceGridLister) List(selector labels.Selector) (ret []*v1.ServiceGrid, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ServiceGrid))
	})
	return ret, err
}

// ServiceGrids returns an object that can list and get ServiceGrids.
func (s *serviceGridLister) ServiceGrids(namespace string) ServiceGridNamespaceLister {
	return serviceGridNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceGridNamespaceLister helps list and get ServiceGrids.
// All objects returned here must be treated as read-only.
type ServiceGridNamespaceLister interface {
	// List lists all ServiceGrids in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ServiceGrid, err error)
	// Get retrieves the ServiceGrid from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ServiceGrid, error)
	ServiceGridNamespaceListerExpansion
}

// serviceGridNamespaceLister implements the ServiceGridNamespaceLister
// interface.
type serviceGridNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceGrids in the indexer for a given namespace.
func (s serviceGridNamespaceLister) List(selector labels.Selector) (ret []*v1.ServiceGrid, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ServiceGrid))
	})
	return ret, err
}

// Get retrieves the ServiceGrid from the indexer for a given namespace and name.
func (s serviceGridNamespaceLister) Get(name string) (*v1.ServiceGrid, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("servicegrid"), name)
	}
	return obj.(*v1.ServiceGrid), nil
}
