name: edgeadm

on: push
#  workflow_dispatch:
#  pull_request:
#    branches:
#      - main

jobs:
  docker:
    name: edgeadm
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Enable ipv4 and ipv6 forwarding
        run: |
          sudo sysctl -w net.ipv6.conf.all.forwarding=1
          sudo sysctl -w net.ipv4.ip_forward=1

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Install edgeadm
        run: sudo make build BINS="lite-apiserver edgeadm" INSTALL_DIR=/usr/local/bin && yes | cp ./_output/linux/amd64/edgeadm /usr/local/bin/

      - name: Install kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/bin/kubectl

      - name: download edgeadm-linux package
        run: mkdir workspace && cd workspace && arch=amd64 version=v0.6.0 && rm -rf edgeadm-linux-* && wget https://superedge-1253687700.cos.ap-guangzhou.myqcloud.com/$version/$arch/edgeadm-linux-$arch-$version.tgz && tar -xzvf edgeadm-linux-* && pwd

      - name: get master ip and set env
        run: echo "GITHUB_SHA_MASTER=$(ifconfig eth0 | grep inet | grep -v inet6 | awk -F' ' '{print $2}')" >> $GITHUB_ENV

      - name: Create single node cluster
        run: sudo /usr/local/bin/edgeadm init --kubernetes-version=1.18.2 --image-repository superedge.tencentcloudcr.com/superedge --service-cidr=10.96.0.0/12 --pod-network-cidr=192.168.0.0/16 --install-pkg-path ./workspace/edgeadm-linux-amd64-v0.6.0/kube-linux-*.tar.gz --enable-edge=true --apiserver-cert-extra-sans=${{ env.GITHUB_SHA_MASTER }} --apiserver-advertise-address=${{ env.GITHUB_SHA_MASTER }}

      - name: Get Cluster status
        run: |
          mkdir -p $HOME/.kube
          sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
          kubectl get nodes -o wide
          kubectl get pods -A
